import os
from jinja2 import Environment, FileSystemLoader
import datetime

def create_html_report(scan_results, report_file, lang='en'):
    """
    Tarama sonuçlarını kullanarak bir HTML raporu oluşturur.
    """
    # Jinja2 ortamını ayarla
    # Şablonların bulunduğu dizini belirtiyoruz.
    template_dir = os.path.join(os.path.dirname(__file__), '..', 'templates')
    env = Environment(loader=FileSystemLoader(template_dir))
    template = env.get_template('report_template.html')

    # Dil metinleri
    if lang == 'tr':
        texts = {
            "report_title": "PyVulnScan Güvenlik Raporu",
            "target_url": "Hedef URL",
            "target_host": "Hedef Sunucu",
            "scan_date": "Tarama Tarihi",
            "web_vulns_title": "Web Uygulama Zafiyetleri",
            "vuln_type": "Zafiyet Tipi",
            "risk": "Risk",
            "details": "Detay",
            "high": "Yüksek",
            "no_web_vulns": "Web uygulaması zafiyeti bulunamadı.",
            "open_ports_title": "Açık Portlar ve Servisler",
            "port": "Port",
            "status": "Durum",
            "service_banner": "Servis Bilgisi (Banner)",
            "open": "Açık",
            "no_open_ports": "Taranan aralıkta açık port bulunamadı.",
            "footer_text": "Bu rapor PyVulnScan tarafından otomatik olarak oluşturulmuştur."
        }
    else: # en
        texts = {
            "report_title": "PyVulnScan Security Report",
            "target_url": "Target URL",
            "target_host": "Target Host",
            "scan_date": "Scan Date",
            "web_vulns_title": "Web Application Vulnerabilities",
            "vuln_type": "Vulnerability Type",
            "risk": "Risk",
            "details": "Details",
            "high": "High",
            "no_web_vulns": "No web application vulnerabilities were found.",
            "open_ports_title": "Open Ports and Services",
            "port": "Port",
            "status": "Status",
            "service_banner": "Service Info (Banner)",
            "open": "Open",
            "no_open_ports": "No open ports were found in the scanned range.",
            "footer_text": "This report was automatically generated by PyVulnScan."
        }

    # Şablona gönderilecek veriler
    report_data = {
        'texts': texts,
        'target_url': scan_results.get('target_url'),
        'target_host': scan_results.get('target_host'),
        'scan_date': datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        'web_vulns': scan_results.get('web_vulns', []),
        'open_ports': scan_results.get('open_ports', [])
    }

    # HTML içeriğini oluştur
    html_content = template.render(report_data)

    # Raporu dosyaya yaz
    try:
        with open(report_file, 'w', encoding='utf-8') as f:
            f.write(html_content)
    except IOError as e:
        print(f"Hata: Rapor dosyası yazılamadı: {report_file} ({e})")